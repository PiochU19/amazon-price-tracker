version: '3.7'

services:

  django:
    build:
      context: ./django
      dockerfile: Dockerfile.local
    container_name: amazon_price_tracker_django
    command: >
      ash -c "python manage.py collectstatic --noinput
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - static_volume:/amazon_price_tracker/static
    expose:
      - 8000
    env_file:
      - ./django/.envs/local/.env
    depends_on:
      - db
  
  db:
    image: postgres:13.3-alpine
    container_name: amazon_price_tracker_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./django/.envs/local/.env.database

  nginx:
    build: ./nginx
    container_name: amazon_price_tracker_nginx
    volumes:
      - static_volume:/amazon_price_tracker/static
    ports:
      - 80:80
    depends_on:
      - django

  redis:
    image: redis:alpine

  celery:
    restart: always
    build:
      context: ./django
      dockerfile: Dockerfile.local
    container_name: amazon_price_tracker_celery
    command: celery -A config worker -l info
    env_file:
      - ./django/.envs/local/.env
    depends_on:
      - db
      - redis
      - django


volumes:
  postgres_data:
  static_volume: